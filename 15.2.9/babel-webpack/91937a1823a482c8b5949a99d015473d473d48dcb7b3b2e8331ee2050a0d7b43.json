{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet RightSideListComponent = class RightSideListComponent {\n  constructor(postsService, router, appState) {\n    this.postsService = postsService;\n    this.router = router;\n    this.appState = appState;\n    this.items = [];\n  }\n  ngDoCheck() {\n    this.items.forEach(item => {\n      item.formatedTitle = this.formatPostTitle(item.title);\n    });\n  }\n  ngOnInit() {\n    this.postsService.getPosts().subscribe(posts => {\n      this.items = posts.reverse(); // Update the items array with fetched posts\n      this.appState.setPosts(posts); // Update the app state with fetched posts\n    });\n    // Subscribe to appState updates\n    this.appState.state$.subscribe(state => {\n      this.items = state.posts; // Update the items array with appState posts\n    });\n    // Get the button\n    let mybutton = document.getElementById(\"myBtn\");\n    // When the user scrolls down 20px from the top of the document, show the button\n    window.onload = () => mybutton.style.display = \"none\";\n    window.onscroll = () => this.scrollFunction(mybutton);\n  }\n  onItemClick(postId) {\n    this.router.navigate(['/post/edit', postId]);\n  }\n  navigateToAddForm() {\n    this.router.navigate(['/post/new']);\n  }\n  deletePost(postId) {\n    this.postsService.deletePost(postId).subscribe(() => {\n      this.appState.deletePost(postId);\n    });\n  }\n  //To maintain view and design structure.\n  formatPostTitle(title) {\n    if (window.innerWidth < 290) return title.length > 2 ? title.substring(0, 1) + '...' : title;else if (window.innerWidth < 840) return title.length > 15 ? title.substring(0, 12) + '...' : title;\n    return title;\n  }\n  scrollFunction(mybutton) {\n    if (document.body.scrollTop > 400 || document.documentElement.scrollTop > 400) {\n      mybutton.style.display = \"block\";\n    } else {\n      mybutton.style.display = \"none\";\n    }\n  }\n  // When the user clicks on the button, scroll to the top of the document\n  topFunction() {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n};\nRightSideListComponent = __decorate([Component({\n  selector: 'app-right-side-list',\n  templateUrl: './right-side-list.component.html',\n  styleUrls: ['./right-side-list.component.scss']\n})], RightSideListComponent);\nexport { RightSideListComponent };","map":{"version":3,"mappings":"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","names":["Component","RightSideListComponent","constructor","postsService","router","appState","ngDoCheck","items","forEach","item","formatedTitle","formatPostTitle","title","ngOnInit","getPosts","subscribe","posts","reverse","setPosts","state$","state","mybutton","document","getElementById","window","onload","style","display","onscroll","scrollFunction","onItemClick","postId","navigate","navigateToAddForm","deletePost","innerWidth","length","substring","body","scrollTop","documentElement","topFunction","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\ahmzy_5ce8ywd\\OneDrive\\Documents\\volvo\\Angular-main\\Angular-main\\recruitment-task-main - Senior\\recruitment-task-main\\src\\app\\right-side-list\\right-side-list.component.ts"],"sourcesContent":["import {Component, DoCheck, OnChanges, OnInit} from '@angular/core';\nimport {PostsService} from \"../posts.service\";\nimport {Router} from \"@angular/router\";\nimport {AppStateService} from \"../app-state.service\";\n\n@Component({\n  selector: 'app-right-side-list',\n  templateUrl: './right-side-list.component.html',\n  styleUrls: ['./right-side-list.component.scss']\n})\nexport class RightSideListComponent implements OnInit, DoCheck {\n  items: any[] = [];\n\n  constructor(private postsService: PostsService, private router: Router, private appState: AppStateService) {}\n\n  ngDoCheck(): void {\n    this.items.forEach(item=>{item.formatedTitle = this.formatPostTitle(item.title)});\n  }\n  ngOnInit(): void {\n    this.postsService.getPosts().subscribe(posts => {\n      this.items = posts.reverse(); // Update the items array with fetched posts\n      this.appState.setPosts(posts); // Update the app state with fetched posts\n    });\n  \n    // Subscribe to appState updates\n    this.appState.state$.subscribe(state => {\n      this.items = state.posts; // Update the items array with appState posts\n    });\n\n      // Get the button\n  let mybutton = document.getElementById(\"myBtn\");\n\n  // When the user scrolls down 20px from the top of the document, show the button\n  window.onload =   ()=>mybutton!.style.display = \"none\";\n  window.onscroll = ()=>this.scrollFunction(mybutton!);\n  }\n\n  onItemClick(postId: number): void {\n    this.router.navigate(['/post/edit', postId]);\n  }\n\n  navigateToAddForm(): void {\n    this.router.navigate(['/post/new']);\n  }\n\n  deletePost(postId: number): void {\n    this.postsService.deletePost(postId).subscribe(() => {\n      this.appState.deletePost(postId);\n    });\n  } \n    //To maintain view and design structure.\n  formatPostTitle(title: string): string {\n    if (window.innerWidth < 290)\n    return title.length > 2 ? title.substring(0, 1) + '...' : title;\n    else if(window.innerWidth < 840)\n    return title.length > 15 ? title.substring(0, 12) + '...' : title;\n    return title;\n  }\n\n\n scrollFunction(mybutton : HTMLElement): void {\n  if (document.body.scrollTop > 400 || document.documentElement.scrollTop > 400) {\n    mybutton.style.display = \"block\";\n  } else {\n    mybutton.style.display = \"none\";\n  }\n}\n\n// When the user clicks on the button, scroll to the top of the document\n topFunction(): void {\n  document.body.scrollTop = 0;\n  document.documentElement.scrollTop = 0;\n}\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}